/**
 * External dependencies
 */
import clsx from 'clsx';

/**
 * WordPress dependencies
 */
import { info, caution, error, published } from '@wordpress/icons';

/**
 * Internal dependencies
 */

import Icon from '../icon';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
function Badge({
  className,
  intent = 'default',
  children,
  ...props
}) {
  /**
   * Returns an icon based on the badge context.
   *
   * @return The corresponding icon for the provided context.
   */
  function contextBasedIcon() {
    switch (intent) {
      case 'info':
        return info;
      case 'success':
        return published;
      case 'warning':
        return caution;
      case 'error':
        return error;
      default:
        return null;
    }
  }
  return /*#__PURE__*/_jsxs("span", {
    className: clsx('components-badge', `is-${intent}`, intent !== 'default' && 'has-icon', className),
    ...props,
    children: [intent !== 'default' && /*#__PURE__*/_jsx(Icon, {
      icon: contextBasedIcon(),
      size: 16,
      fill: "currentColor",
      className: "components-badge__icon"
    }), /*#__PURE__*/_jsx("span", {
      className: "components-badge__content",
      children: children
    })]
  });
}
export default Badge;
//# sourceMappingURL=index.js.map